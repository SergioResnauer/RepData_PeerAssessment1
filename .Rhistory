medianPerDayFilledIn <- median(totalStepsDayFilledIn$steps, na.rm = TRUE)
meanPerDayFilledIn <- mean(totalStepsDayFilledIn$steps, na.rm = TRUE)
dataL <- weekdays(as.Date(activityFilledIn$date))
activityFilledIn <- mutate(activityFilledIn,weekday=dataL)
knitr::opts_chunk$set(echo = TRUE)
unzip("activity.zip", exdir = "data")
activity <- read.csv("data/activity.csv")
totalStepsDay <- aggregate(steps ~ date, activity, sum)
summary(totalStepsDay)
barplot(height = totalStepsDay$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDay$date,
col = "blue",
main = "Total steps by date")
## Calculate and report the mean and median total number of steps taken per day
medianPerDay <- median(totalStepsDay$steps, na.rm = TRUE)
meanPerDay <- mean(totalStepsDay$steps, na.rm = TRUE)
library(dplyr)
dailyPattern <- activity %>% group_by(interval) %>% summarise(average=mean(steps, na.rm=TRUE))
plot(x=1:nrow(dailyPattern), y=dailyPattern$average, type="l", col="blue", xlab = "Interval", ylab="Average")
maxInterval <- filter(dailyPattern, average==max(average))
naNumber <- sum(is.na(activity$steps))
filledIn <- numeric(nrow(activity))
for (i in 1:nrow(activity)) {
if (is.na(activity[i,"steps"]) == TRUE) {
filledIn[i] <- dailyPattern[i,"average"]
} else {
filledIn[i] <- activity[i,"steps"]
}
}
activityFilledIn <- mutate(activity,stepsFilledIn=filledIn)
totalStepsDayFilledIn <- aggregate(steps ~ date, activityFilledIn, sum)
summary(totalStepsDayFilledIn)
barplot(height = totalStepsDayFilledIn$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDayFilledIn$date,
col = "blue",
main = "Total steps by date filled in")
medianPerDayFilledIn <- median(totalStepsDayFilledIn$steps, na.rm = TRUE)
meanPerDayFilledIn <- mean(totalStepsDayFilledIn$steps, na.rm = TRUE)
dayW <- weekdays(as.Date(activityFilledIn$date))
for (i in 1:nrow(activityFilledIn)) {
if (dayW[i] %in% c("Domingo", "Sábado")) {
dayW[i] <- "Weekend"
} else {
dayW[i] <- "Weekday"
}
}
activityFilledIn <- mutate(activityFilledIn,weekday=dataL)
knitr::opts_chunk$set(echo = TRUE)
unzip("activity.zip", exdir = "data")
activity <- read.csv("data/activity.csv")
totalStepsDay <- aggregate(steps ~ date, activity, sum)
summary(totalStepsDay)
barplot(height = totalStepsDay$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDay$date,
col = "blue",
main = "Total steps by date")
## Calculate and report the mean and median total number of steps taken per day
medianPerDay <- median(totalStepsDay$steps, na.rm = TRUE)
meanPerDay <- mean(totalStepsDay$steps, na.rm = TRUE)
library(dplyr)
dailyPattern <- activity %>% group_by(interval) %>% summarise(average=mean(steps, na.rm=TRUE))
plot(x=1:nrow(dailyPattern), y=dailyPattern$average, type="l", col="blue", xlab = "Interval", ylab="Average")
maxInterval <- filter(dailyPattern, average==max(average))
naNumber <- sum(is.na(activity$steps))
filledIn <- numeric(nrow(activity))
for (i in 1:nrow(activity)) {
if (is.na(activity[i,"steps"]) == TRUE) {
filledIn[i] <- dailyPattern[i,"average"]
} else {
filledIn[i] <- activity[i,"steps"]
}
}
activityFilledIn <- mutate(activity,stepsFilledIn=filledIn)
totalStepsDayFilledIn <- aggregate(steps ~ date, activityFilledIn, sum)
summary(totalStepsDayFilledIn)
barplot(height = totalStepsDayFilledIn$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDayFilledIn$date,
col = "blue",
main = "Total steps by date filled in")
medianPerDayFilledIn <- median(totalStepsDayFilledIn$steps, na.rm = TRUE)
meanPerDayFilledIn <- mean(totalStepsDayFilledIn$steps, na.rm = TRUE)
dayW <- weekdays(as.Date(activityFilledIn$date))
for (i in 1:nrow(activityFilledIn)) {
if (dayW[i] %in% c("Domingo", "Sábado")) {
dayW[i] <- "Weekend"
} else {
dayW[i] <- "Weekday"
}
}
activityFilledIn <- mutate(activityFilledIn,weekday=dayW)
knitr::opts_chunk$set(echo = TRUE)
unzip("activity.zip", exdir = "data")
activity <- read.csv("data/activity.csv")
totalStepsDay <- aggregate(steps ~ date, activity, sum)
summary(totalStepsDay)
barplot(height = totalStepsDay$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDay$date,
col = "blue",
main = "Total steps by date")
## Calculate and report the mean and median total number of steps taken per day
medianPerDay <- median(totalStepsDay$steps, na.rm = TRUE)
meanPerDay <- mean(totalStepsDay$steps, na.rm = TRUE)
library(dplyr)
dailyPattern <- activity %>% group_by(interval) %>% summarise(average=mean(steps, na.rm=TRUE))
plot(x=1:nrow(dailyPattern), y=dailyPattern$average, type="l", col="blue", xlab = "Interval", ylab="Average")
maxInterval <- filter(dailyPattern, average==max(average))
naNumber <- sum(is.na(activity$steps))
filledIn <- numeric(nrow(activity))
for (i in 1:nrow(activity)) {
if (is.na(activity[i,"steps"]) == TRUE) {
filledIn[i] <- dailyPattern[i,"average"]
} else {
filledIn[i] <- activity[i,"steps"]
}
}
activityFilledIn <- mutate(activity,stepsFilledIn=filledIn)
totalStepsDayFilledIn <- aggregate(steps ~ date, activityFilledIn, sum)
summary(totalStepsDayFilledIn)
barplot(height = totalStepsDayFilledIn$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDayFilledIn$date,
col = "blue",
main = "Total steps by date filled in")
medianPerDayFilledIn <- median(totalStepsDayFilledIn$steps, na.rm = TRUE)
meanPerDayFilledIn <- mean(totalStepsDayFilledIn$steps, na.rm = TRUE)
dayW <- weekdays(as.Date(activityFilledIn$date))
##for (i in 1:nrow(activityFilledIn)) {
##        if (dayW[i] %in% c("Domingo", "Sábado")) {
##                dayW[i] <- "Weekend"
##        } else {
##                dayW[i] <- "Weekday"
##        }
##}
activityFilledIn <- mutate(activityFilledIn,weekday=dayW)
knitr::opts_chunk$set(echo = TRUE)
unzip("activity.zip", exdir = "data")
activity <- read.csv("data/activity.csv")
totalStepsDay <- aggregate(steps ~ date, activity, sum)
summary(totalStepsDay)
barplot(height = totalStepsDay$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDay$date,
col = "blue",
main = "Total steps by date")
## Calculate and report the mean and median total number of steps taken per day
medianPerDay <- median(totalStepsDay$steps, na.rm = TRUE)
meanPerDay <- mean(totalStepsDay$steps, na.rm = TRUE)
library(dplyr)
dailyPattern <- activity %>% group_by(interval) %>% summarise(average=mean(steps, na.rm=TRUE))
plot(x=1:nrow(dailyPattern), y=dailyPattern$average, type="l", col="blue", xlab = "Interval", ylab="Average")
maxInterval <- filter(dailyPattern, average==max(average))
naNumber <- sum(is.na(activity$steps))
filledIn <- numeric(nrow(activity))
for (i in 1:nrow(activity)) {
if (is.na(activity[i,"steps"]) == TRUE) {
filledIn[i] <- dailyPattern[i,"average"]
} else {
filledIn[i] <- activity[i,"steps"]
}
}
activityFilledIn <- mutate(activity,stepsFilledIn=filledIn)
totalStepsDayFilledIn <- aggregate(steps ~ date, activityFilledIn, sum)
summary(totalStepsDayFilledIn)
barplot(height = totalStepsDayFilledIn$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDayFilledIn$date,
col = "blue",
main = "Total steps by date filled in")
medianPerDayFilledIn <- median(totalStepsDayFilledIn$steps, na.rm = TRUE)
meanPerDayFilledIn <- mean(totalStepsDayFilledIn$steps, na.rm = TRUE)
dayW <- weekdays(as.Date(activityFilledIn$date))
for (i in 1:nrow(activityFilledIn)) {
if (dayW[i] %in% c("domingo", "sábado")) {
dayW[i] <- "Weekend"
} else {
dayW[i] <- "Weekday"
}
}
activityFilledIn <- mutate(activityFilledIn,weekday=dayW)
knitr::opts_chunk$set(echo = TRUE)
unzip("activity.zip", exdir = "data")
activity <- read.csv("data/activity.csv")
totalStepsDay <- aggregate(steps ~ date, activity, sum)
summary(totalStepsDay)
barplot(height = totalStepsDay$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDay$date,
col = "blue",
main = "Total steps by date")
## Calculate and report the mean and median total number of steps taken per day
medianPerDay <- median(totalStepsDay$steps, na.rm = TRUE)
meanPerDay <- mean(totalStepsDay$steps, na.rm = TRUE)
library(dplyr)
dailyPattern <- activity %>% group_by(interval) %>% summarise(average=mean(steps, na.rm=TRUE))
plot(x=1:nrow(dailyPattern), y=dailyPattern$average, type="l", col="blue", xlab = "Interval", ylab="Average")
maxInterval <- filter(dailyPattern, average==max(average))
naNumber <- sum(is.na(activity$steps))
filledIn <- numeric(nrow(activity))
for (i in 1:nrow(activity)) {
if (is.na(activity[i,"steps"]) == TRUE) {
filledIn[i] <- dailyPattern[i,"average"]
} else {
filledIn[i] <- activity[i,"steps"]
}
}
activityFilledIn <- mutate(activity,stepsFilledIn=filledIn)
totalStepsDayFilledIn <- aggregate(steps ~ date, activityFilledIn, sum)
summary(totalStepsDayFilledIn)
barplot(height = totalStepsDayFilledIn$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDayFilledIn$date,
col = "blue",
main = "Total steps by date filled in")
medianPerDayFilledIn <- median(totalStepsDayFilledIn$steps, na.rm = TRUE)
meanPerDayFilledIn <- mean(totalStepsDayFilledIn$steps, na.rm = TRUE)
library(ggplot2)
dayW <- weekdays(as.Date(activityFilledIn$date))
for (i in 1:nrow(activityFilledIn)) {
if (dayW[i] %in% c("domingo", "sábado")) {
dayW[i] <- "Weekend"
} else {
dayW[i] <- "Weekday"
}
}
activityFilledIn <- mutate(activityFilledIn,weekday=dayW)
dailyPatternFilledIn <- activityFilledIn %>% group_by(interval, weekday) %>% summarise(average=mean(steps, na.rm=TRUE))
qplot(interval, average, data=dailyPatternFilledIn, geom="line", facets=day~.)
View(dailyPatternFilledIn)
knitr::opts_chunk$set(echo = TRUE)
unzip("activity.zip", exdir = "data")
activity <- read.csv("data/activity.csv")
totalStepsDay <- aggregate(steps ~ date, activity, sum)
summary(totalStepsDay)
barplot(height = totalStepsDay$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDay$date,
col = "blue",
main = "Total steps by date")
## Calculate and report the mean and median total number of steps taken per day
medianPerDay <- median(totalStepsDay$steps, na.rm = TRUE)
meanPerDay <- mean(totalStepsDay$steps, na.rm = TRUE)
library(dplyr)
dailyPattern <- activity %>% group_by(interval) %>% summarise(average=mean(steps, na.rm=TRUE))
plot(x=1:nrow(dailyPattern), y=dailyPattern$average, type="l", col="blue", xlab = "Interval", ylab="Average")
maxInterval <- filter(dailyPattern, average==max(average))
naNumber <- sum(is.na(activity$steps))
filledIn <- numeric(nrow(activity))
for (i in 1:nrow(activity)) {
if (is.na(activity[i,"steps"]) == TRUE) {
filledIn[i] <- dailyPattern[i,"average"]
} else {
filledIn[i] <- activity[i,"steps"]
}
}
activityFilledIn <- mutate(activity,stepsFilledIn=filledIn)
totalStepsDayFilledIn <- aggregate(steps ~ date, activityFilledIn, sum)
summary(totalStepsDayFilledIn)
barplot(height = totalStepsDayFilledIn$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDayFilledIn$date,
col = "blue",
main = "Total steps by date filled in")
medianPerDayFilledIn <- median(totalStepsDayFilledIn$steps, na.rm = TRUE)
meanPerDayFilledIn <- mean(totalStepsDayFilledIn$steps, na.rm = TRUE)
library(ggplot2)
dayW <- weekdays(as.Date(activityFilledIn$date))
for (i in 1:nrow(activityFilledIn)) {
if (dayW[i] %in% c("domingo", "sábado")) {
dayW[i] <- "Weekend"
} else {
dayW[i] <- "Weekday"
}
}
activityFilledIn <- mutate(activityFilledIn,weekday=dayW)
dailyPatternFilledIn <- activityFilledIn %>% group_by(interval, weekday) %>% summarise(average=mean(steps, na.rm=TRUE))
##qplot(interval, average, data=dailyPatternFilledIn, geom="line", facets=day~.)
g <- ggplot(dailyPatternFilledIn, aes(x = factor(interval), y = average, fill = weekday))
p <- g + geom_line(stat="identity") + facet_grid(weekday~.) +
ylab(expression("Average")) +
xlab(expression("Interval"))
print(p)
p <- g + geom_bar(stat="identity") + facet_grid(County~., scales="free") + position = "identity" +
ylab(expression("Total PM2.5 Emissions")) +
xlab(expression("Year")) +
ggtitle("Total PM2.5 emission from motor vehicle sources")
knitr::opts_chunk$set(echo = TRUE)
unzip("activity.zip", exdir = "data")
activity <- read.csv("data/activity.csv")
totalStepsDay <- aggregate(steps ~ date, activity, sum)
summary(totalStepsDay)
barplot(height = totalStepsDay$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDay$date,
col = "blue",
main = "Total steps by date")
## Calculate and report the mean and median total number of steps taken per day
medianPerDay <- median(totalStepsDay$steps, na.rm = TRUE)
meanPerDay <- mean(totalStepsDay$steps, na.rm = TRUE)
library(dplyr)
dailyPattern <- activity %>% group_by(interval) %>% summarise(average=mean(steps, na.rm=TRUE))
plot(x=1:nrow(dailyPattern), y=dailyPattern$average, type="l", col="blue", xlab = "Interval", ylab="Average")
maxInterval <- filter(dailyPattern, average==max(average))
naNumber <- sum(is.na(activity$steps))
filledIn <- numeric(nrow(activity))
for (i in 1:nrow(activity)) {
if (is.na(activity[i,"steps"]) == TRUE) {
filledIn[i] <- dailyPattern[i,"average"]
} else {
filledIn[i] <- activity[i,"steps"]
}
}
activityFilledIn <- mutate(activity,stepsFilledIn=filledIn)
totalStepsDayFilledIn <- aggregate(steps ~ date, activityFilledIn, sum)
summary(totalStepsDayFilledIn)
barplot(height = totalStepsDayFilledIn$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDayFilledIn$date,
col = "blue",
main = "Total steps by date filled in")
medianPerDayFilledIn <- median(totalStepsDayFilledIn$steps, na.rm = TRUE)
meanPerDayFilledIn <- mean(totalStepsDayFilledIn$steps, na.rm = TRUE)
library(ggplot2)
dayW <- weekdays(as.Date(activityFilledIn$date))
for (i in 1:nrow(activityFilledIn)) {
if (dayW[i] %in% c("domingo", "sábado")) {
dayW[i] <- "Weekend"
} else {
dayW[i] <- "Weekday"
}
}
activityFilledIn <- mutate(activityFilledIn,weekday=dayW)
dailyPatternFilledIn <- activityFilledIn %>% group_by(interval, weekday) %>% summarise(average=mean(steps, na.rm=TRUE))
##qplot(interval, average, data=dailyPatternFilledIn, geom="line", facets=day~.)
g <- ggplot(dailyPatternFilledIn, aes(x = factor(interval), y = average, fill = weekday))
p <- g + geom_line(stat="identity", position = "identity") + facet_grid(weekday~.) +
ylab(expression("Average")) +
xlab(expression("Interval"))
print(p)
knitr::opts_chunk$set(echo = TRUE)
unzip("activity.zip", exdir = "data")
activity <- read.csv("data/activity.csv")
totalStepsDay <- aggregate(steps ~ date, activity, sum)
summary(totalStepsDay)
barplot(height = totalStepsDay$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDay$date,
col = "blue",
main = "Total steps by date")
## Calculate and report the mean and median total number of steps taken per day
medianPerDay <- median(totalStepsDay$steps, na.rm = TRUE)
meanPerDay <- mean(totalStepsDay$steps, na.rm = TRUE)
library(dplyr)
dailyPattern <- activity %>% group_by(interval) %>% summarise(average=mean(steps, na.rm=TRUE))
plot(x=1:nrow(dailyPattern), y=dailyPattern$average, type="l", col="blue", xlab = "Interval", ylab="Average")
maxInterval <- filter(dailyPattern, average==max(average))
naNumber <- sum(is.na(activity$steps))
filledIn <- numeric(nrow(activity))
for (i in 1:nrow(activity)) {
if (is.na(activity[i,"steps"]) == TRUE) {
filledIn[i] <- dailyPattern[i,"average"]
} else {
filledIn[i] <- activity[i,"steps"]
}
}
activityFilledIn <- mutate(activity,stepsFilledIn=filledIn)
totalStepsDayFilledIn <- aggregate(steps ~ date, activityFilledIn, sum)
summary(totalStepsDayFilledIn)
barplot(height = totalStepsDayFilledIn$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDayFilledIn$date,
col = "blue",
main = "Total steps by date filled in")
medianPerDayFilledIn <- median(totalStepsDayFilledIn$steps, na.rm = TRUE)
meanPerDayFilledIn <- mean(totalStepsDayFilledIn$steps, na.rm = TRUE)
library(ggplot2)
dayW <- weekdays(as.Date(activityFilledIn$date))
for (i in 1:nrow(activityFilledIn)) {
if (dayW[i] %in% c("domingo", "sábado")) {
dayW[i] <- "Weekend"
} else {
dayW[i] <- "Weekday"
}
}
activityFilledIn <- mutate(activityFilledIn,weekday=dayW)
dailyPatternFilledIn <- activityFilledIn %>% group_by(interval, weekday) %>% summarise(average=mean(steps, na.rm=TRUE))
qplot(interval, average, data=dailyPatternFilledIn, geom="line", facets=day~.)
knitr::opts_chunk$set(echo = TRUE)
unzip("activity.zip", exdir = "data")
activity <- read.csv("data/activity.csv")
totalStepsDay <- aggregate(steps ~ date, activity, sum)
summary(totalStepsDay)
barplot(height = totalStepsDay$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDay$date,
col = "blue",
main = "Total steps by date")
## Calculate and report the mean and median total number of steps taken per day
medianPerDay <- median(totalStepsDay$steps, na.rm = TRUE)
meanPerDay <- mean(totalStepsDay$steps, na.rm = TRUE)
library(dplyr)
dailyPattern <- activity %>% group_by(interval) %>% summarise(average=mean(steps, na.rm=TRUE))
plot(x=1:nrow(dailyPattern), y=dailyPattern$average, type="l", col="blue", xlab = "Interval", ylab="Average")
maxInterval <- filter(dailyPattern, average==max(average))
naNumber <- sum(is.na(activity$steps))
filledIn <- numeric(nrow(activity))
for (i in 1:nrow(activity)) {
if (is.na(activity[i,"steps"]) == TRUE) {
filledIn[i] <- dailyPattern[i,"average"]
} else {
filledIn[i] <- activity[i,"steps"]
}
}
activityFilledIn <- mutate(activity,stepsFilledIn=filledIn)
totalStepsDayFilledIn <- aggregate(steps ~ date, activityFilledIn, sum)
summary(totalStepsDayFilledIn)
barplot(height = totalStepsDayFilledIn$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDayFilledIn$date,
col = "blue",
main = "Total steps by date filled in")
medianPerDayFilledIn <- median(totalStepsDayFilledIn$steps, na.rm = TRUE)
meanPerDayFilledIn <- mean(totalStepsDayFilledIn$steps, na.rm = TRUE)
library(ggplot2)
dayW <- weekdays(as.Date(activityFilledIn$date))
for (i in 1:nrow(activityFilledIn)) {
if (dayW[i] %in% c("domingo", "sábado")) {
dayW[i] <- "Weekend"
} else {
dayW[i] <- "Weekday"
}
}
activityFilledIn <- mutate(activityFilledIn,weekday=dayW)
dailyPatternFilledIn <- activityFilledIn %>% group_by(interval, weekday) %>% summarise(average=mean(steps, na.rm=TRUE))
qplot(x=interval, y=average, data=dailyPatternFilledIn, geom="line", facets=day~.)
knitr::opts_chunk$set(echo = TRUE)
unzip("activity.zip", exdir = "data")
activity <- read.csv("data/activity.csv")
totalStepsDay <- aggregate(steps ~ date, activity, sum)
summary(totalStepsDay)
barplot(height = totalStepsDay$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDay$date,
col = "blue",
main = "Total steps by date")
## Calculate and report the mean and median total number of steps taken per day
medianPerDay <- median(totalStepsDay$steps, na.rm = TRUE)
meanPerDay <- mean(totalStepsDay$steps, na.rm = TRUE)
library(dplyr)
dailyPattern <- activity %>% group_by(interval) %>% summarise(average=mean(steps, na.rm=TRUE))
plot(x=1:nrow(dailyPattern), y=dailyPattern$average, type="l", col="blue", xlab = "Interval", ylab="Average")
maxInterval <- filter(dailyPattern, average==max(average))
naNumber <- sum(is.na(activity$steps))
filledIn <- numeric(nrow(activity))
for (i in 1:nrow(activity)) {
if (is.na(activity[i,"steps"]) == TRUE) {
filledIn[i] <- dailyPattern[i,"average"]
} else {
filledIn[i] <- activity[i,"steps"]
}
}
activityFilledIn <- mutate(activity,stepsFilledIn=filledIn)
totalStepsDayFilledIn <- aggregate(steps ~ date, activityFilledIn, sum)
summary(totalStepsDayFilledIn)
barplot(height = totalStepsDayFilledIn$steps,
xlab = "Date",
ylab = "Total steps",
names.arg = totalStepsDayFilledIn$date,
col = "blue",
main = "Total steps by date filled in")
medianPerDayFilledIn <- median(totalStepsDayFilledIn$steps, na.rm = TRUE)
meanPerDayFilledIn <- mean(totalStepsDayFilledIn$steps, na.rm = TRUE)
library(ggplot2)
dayW <- weekdays(as.Date(activityFilledIn$date))
for (i in 1:nrow(activityFilledIn)) {
if (dayW[i] %in% c("domingo", "sábado")) {
dayW[i] <- "Weekend"
} else {
dayW[i] <- "Weekday"
}
}
activityFilledIn <- mutate(activityFilledIn,weekday=dayW)
dailyPatternFilledIn <- activityFilledIn %>% group_by(interval, weekday) %>% summarise(average=mean(steps, na.rm=TRUE))
qplot(x=interval, y=average, data=dailyPatternFilledIn, geom="line", facets=weekday~.)
##g <- ggplot(dailyPatternFilledIn, aes(x = factor(interval), y = average, fill = weekday))
##p <- g + geom_line(stat="identity", position = "identity") + facet_grid(weekday~.) +
##        ylab(expression("Average")) +
##        xlab(expression("Interval"))
##print(p)
